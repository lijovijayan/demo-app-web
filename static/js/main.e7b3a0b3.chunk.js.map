{"version":3,"sources":["components/navbar.tsx","components/app.header.tsx","screens/dashboard/overview/index.tsx","screens/dashboard/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavBar","className","size","AppHeader","title","Item","href","extra","columns","dataIndex","key","fixed","data","i","push","name","age","address","Overview","LineChart","width","height","margin","top","right","left","bottom","XAxis","dataKey","Tooltip","CartesianGrid","stroke","Line","type","yAxisId","dataSource","TabPane","Tabs","Dashboard","defaultActiveKey","onChange","activeKey","console","log","tab","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7b3a0b3.chunk.js","sourcesContent":["import '../styles/component.styles/navbar.scss'\nimport {\n    IoRocketOutline,\n    IoTodayOutline,\n    IoSpeedometerOutline,\n    IoMailUnreadOutline,\n    IoExtensionPuzzleOutline,\n    IoCreateOutline,\n    IoHomeOutline,\n    IoBuildOutline,\n    IoPersonOutline\n} from 'react-icons/io5'\n\nexport function NavBar() {\n    return (\n        <div className=\"app-navbar\">\n            <ol>\n                <li className=\"app-icon\">\n                    <IoRocketOutline size={28} />\n                </li>\n                <li>\n                    <IoHomeOutline size={28} />\n                </li>\n                <li className=\"active\">\n                    <IoSpeedometerOutline size={28} />\n                </li>\n                <li>\n                    <IoMailUnreadOutline size={28} />\n                </li>\n                <div className=\"divider\"></div>\n                <li>\n                    <IoCreateOutline size={28} />\n                </li>\n                <li>\n                    <IoTodayOutline size={28} />\n                </li>\n                <div className=\"divider\"></div>\n                <li>\n                    <IoBuildOutline size={28} />\n                </li>\n                <li>\n                    <IoExtensionPuzzleOutline size={28} />\n                </li>\n                <div className=\"divider\"></div>\n                <li>\n                    <IoPersonOutline size={28} />\n                </li>\n            </ol>\n        </div>\n    )\n}\n","import '../styles/component.styles/app.header.scss'\nimport { Breadcrumb, Button, PageHeader } from 'antd'\n\nexport function AppHeader() {\n    return (\n        <div className=\"app-header\">\n            <PageHeader\n                className=\"site-page-header\"\n                title={\n                    <Breadcrumb className=\"app-breadcrumb\">\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\n                        <Breadcrumb.Item>\n                            <a href=\"\">Application Center</a>\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item>\n                            <a href=\"\">Application List</a>\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item>An Application</Breadcrumb.Item>\n                    </Breadcrumb>\n                }\n                extra={[\n                    <Button key=\"3\">PRINT</Button>,\n                    <Button key=\"2\">EXPORT</Button>,\n                ]}\n            ></PageHeader>\n        </div>\n    )\n}\n","import { Table } from 'antd'\nimport { CartesianGrid, Line, LineChart, XAxis, Tooltip } from 'recharts'\n\nconst columns: any[] = [\n    {\n        title: 'Full Name',\n        dataIndex: 'name',\n        key: 'name',\n        fixed: 'left'\n    },\n    {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        fixed: 'left'\n    },\n    {\n        title: 'Column 1',\n        dataIndex: 'address',\n        key: '1'\n    },\n    {\n        title: 'Column 2',\n        dataIndex: 'address',\n        key: '2'\n    }\n]\n\nconst data: any[] = []\nfor (let i = 0; i < 100; i++) {\n    data.push({\n        key: i,\n        name: `Edrward ${i}`,\n        age: 32,\n        address: `London Park no. ${i}`\n    })\n}\n\nexport function Overview() {\n    return (\n        <div className=\"dashboard\">\n            <LineChart\n                width={400}\n                height={400}\n                data={data}\n                margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n            >\n                <XAxis dataKey=\"name\" />\n                <Tooltip />\n                <CartesianGrid stroke=\"#f5f5f5\" />\n                <Line\n                    type=\"monotone\"\n                    dataKey=\"uv\"\n                    stroke=\"#ff7300\"\n                    yAxisId={0}\n                />\n                <Line\n                    type=\"monotone\"\n                    dataKey=\"pv\"\n                    stroke=\"#387908\"\n                    yAxisId={1}\n                />\n            </LineChart>\n            <Table columns={columns} dataSource={data} />\n        </div>\n    )\n}\n","import { Tabs } from 'antd'\nimport { IoAnalyticsOutline } from 'react-icons/io5'\nimport { FaUserGraduate } from 'react-icons/fa'\nimport { GiOrganigram } from 'react-icons/gi'\nimport '../../styles/screen.styles/dashboard.scss'\nimport { Overview } from './overview'\nconst { TabPane } = Tabs\n\nexport function Dashboard() {\n    function onTabChange(activeKey: string) {\n        console.log(activeKey)\n    }\n    return (\n        <div className=\"dashboard\">\n            <Tabs defaultActiveKey=\"1\" onChange={onTabChange}>\n                <TabPane\n                    tab={\n                        <div className=\"tab-title\">\n                            <IoAnalyticsOutline />\n                            Overview\n                        </div>\n                    }\n                    key=\"1\"\n                >\n                    <Overview />\n                </TabPane>\n                <TabPane\n                    tab={\n                        <div className=\"tab-title\">\n                            <GiOrganigram />\n                            Colleges\n                        </div>\n                    }\n                    key=\"2\"\n                >\n                    Content of Tab Pane 2\n                </TabPane>\n                <TabPane\n                    tab={\n                        <div className=\"tab-title\">\n                            <FaUserGraduate />\n                            Students\n                        </div>\n                    }\n                    key=\"3\"\n                >\n                    Content of Tab Pane 3\n                </TabPane>\n            </Tabs>\n        </div>\n    )\n}\n","import React from 'react'\nimport { AppHeader, NavBar, SplashScreen } from './components'\nimport { Dashboard } from './screens/dashboard'\nimport './styles/app.scss'\n\nfunction App() {\n    return (\n        <div className=\"app-container\">\n            {/* <SplashScreen /> */}\n            <div className=\"navbar\">\n                <NavBar />\n            </div>\n            <div className=\"app-content\">\n                <AppHeader />\n                <div className=\"screen-content\">\n                    <Dashboard />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}